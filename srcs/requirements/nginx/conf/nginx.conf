#http://nginx.org/en/docs/http/configuring_https_servers.html

# user www-data;
# worker_processes auto;
# pid /run/nginx.pid;
# include /etc/nginx/modules-enabled/*.conf;

events { }

http {

    # Le bloc "Server" permet de déclarer un hôte virtuel
    # et à l'intérieur on déclare sa configuration 
    server {
        listen 443 ssl; #listens to port 443 (HTTPS port) + enable SSL for all IPV4 connections
        listen [::]:443 ssl; #for all IPV4 connections
        
        ssl on;
        ssl_protocols TLSv1.2 TLSv1.3; #protocols accepted
        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt; #location of certificate
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key; #location of key

        #  root : Sets the root directory for requests
        #dossier d’accueil : La directive "root" permet de déclarer la racine du site Internet,
        # où se situe la page index.html.
        root /var/www/html;

        # La directive "server_name" sert à déclarer le nom de domaine, ou les noms de domaine, concerné par ce bloc "Server".
        # On peut également utiliser une adresse IP. 
        server_name vnafissi.42.fr;
        
        #la directive "index" permet d'indiquer les noms des pages par défaut du site.
        #Si l'on définit "index.html", lorsque l'on accède à la racine du site,
        #le serveur Web va chercher à nous présenter le contenu de la page index.html.
        index index.php index.html index.htm; #préciser quelles pages afficher en premier

        # https://stackoverflow.com/questions/57561236/how-nginx-process-404-fallback-in-try-files
        # This location block specifies the “/” prefix compared with the URI from the request. 
        # Pour tous les fichiers, nous essayons d’ouvrir le fichier renseigné, si c’est un échec nous renverrons 404.
        location / {
             # First attempt to serve request as file, then    # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404; #renvoyer les requêtes inconnues vers une 404 error.
        }
        # La directive "location" permet d'indiquer un chemin relatif dans l'URL.
        # En indiquant "/", on cible toutes les requêtes puisqu'une requête commence toujours par "/"
        # après le nom de domaine pour spécifier le chemin vers une page.

        # location ~ \.php$ { # Pour toutes les requetes php
        #     include snippets/fastcgi-php.conf;
        #     fastcgi_pass wordpress:9000; # Comment renvoyer les requetes php sur le port 9000
        # }
    }


        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip off; #https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=773332

        ##
        # Virtual Host Configs
        ##

        # include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}