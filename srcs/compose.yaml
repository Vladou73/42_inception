# L'argument version permet de spécifier à Docker Compose quelle version on souhaite utiliser
# et donc d'utiliser ou pas certaines versions
version: '3.7'

# L'ensemble des conteneurs qui doivent être créés doivent être définis sous l'argument services
services:
  nginx: # projet name 
    # creation d'une dependance entre 2 conteneurs ==> Docker va demarrer le service db AVANT le service wordpress
    depends_on:
      - mariadb
    # hostname declares a custom host name to use for the service container. MUST be a valid RFC 1123 hostname.
    hostname: nginx
    image: nginx:nginx
    container_name: nginx #is a string that specifies a custom container name, rather than a generated default name.
    build: # specifies the build configuration for creating container image from source
      context: ./requirements/nginx
      dockerfile: Dockerfile
    restart: on-failure
    networks:
    - inception-network
    ports: # Exposes container ports
    - "443:443" #HOST:CONTAINER SHOULD always be specified as a (quoted) string.
    # volumes : permet de stocker l'ensemble du contenu du dossier /var/lib/mysql dans un disque persistant. Et donc, de pouvoir garder les données en local sur notre host.
    volumes: # On place le chemin local à gauche du séparateur : et le chemin dans le conteneur à droite local:conteneur
      - wordpress_files:/var/www/html
    env_file: .env
  mariadb:
    hostname: mariadb
    image: mariadb:mariadb
    container_name: mariadb
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    restart: on-failure
    networks:
      - inception-network
    volumes: #/var/lib/mysql configuré dans mariadb conf file
      - wordpress_database:/var/lib/mysql
    environment: #defines environment variables set in the container
      - DB_NAME=${DB_NAME}
      - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - DB_USER_USERNAME=${DB_USER_USERNAME}
      - DB_USER_PASSWORD=${DB_USER_PASSWORD}
      - DB_HOST=${DB_HOST}
  wordpress:
    depends_on:
      - mariadb
    hostname: wordpress
    image: wordpress:wordpress
    container_name: wordpress
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    volumes:
       - wordpress_files:/var/www/html
    restart: on-failure
    networks:
      - inception-network
    # env_file adds environment variables to the container based on file content.
    env_file: .env

# volumes defines mount host paths or named volumes that MUST be accessible by service containers.
volumes:
  wordpress_files:
     driver: local # The built-in local driver on Linux accepts options similar to the linux mount command. 
     driver_opts:
       type: none
       o: bind # bind mount pour pouvoir spécifier le chemin où le volume est monté (ci-dessous)
       device: ${DATA_FOLDER}/wordpress_files
  wordpress_database:
     driver: local # The built-in local driver on Linux accepts options similar to the linux mount command. 
     driver_opts:
       type: none
       o: bind # bind mount pour pouvoir spécifier le chemin où le volume est monté (ci-dessous)
       device: ${DATA_FOLDER}/wordpress_database


# networks defines the networks that service containers are attached to, referencing entries under the top-level networks key.
networks:
  inception-network: